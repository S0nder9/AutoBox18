{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npatr\\\\Documents\\\\GitHub\\\\AutoBox18\\\\autobox\\\\src\\\\Components\\\\UI\\\\Buttons\\\\Enrol.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./Enrol.module.css\";\nimport { entrySliceClose, entrySliceOpen } from \"../../../Store/Slices/entrySlice\";\nimport Modal from \"../Modal/Modal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Enrol = props => {\n  _s();\n  const openModalWindow = useSelector(state => state.entrySlice.entrySliceOpenState);\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        dispatch(entrySliceClose());\n      }\n    };\n    if (openModalWindow) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [openModalWindow, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: () => dispatch(entrySliceOpen()),\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), openModalWindow && /*#__PURE__*/_jsxDEV(Modal, {\n      ref: modalRef,\n      onClose: () => dispatch(entrySliceClose())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Enrol, \"YRdLMAoikCXbd82xW+fCG/Wi8P0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Enrol;\nexport default Enrol;\nvar _c;\n$RefreshReg$(_c, \"Enrol\");","map":{"version":3,"names":["React","useEffect","useRef","useDispatch","useSelector","styles","entrySliceClose","entrySliceOpen","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Enrol","props","_s","openModalWindow","state","entrySlice","entrySliceOpenState","dispatch","modalRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","children","className","button","onClick","text","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClose","_c","$RefreshReg$"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/autobox/src/Components/UI/Buttons/Enrol.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./Enrol.module.css\";\nimport { entrySliceClose, entrySliceOpen } from \"../../../Store/Slices/entrySlice\";\nimport Modal from \"../Modal/Modal\";\n\nconst Enrol = (props) => {\n    const openModalWindow = useSelector(state => state.entrySlice.entrySliceOpenState);\n    const dispatch = useDispatch();\n    const modalRef = useRef();\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (modalRef.current && !modalRef.current.contains(event.target)) {\n                dispatch(entrySliceClose());\n            }\n        };\n\n        if (openModalWindow) {\n            document.addEventListener(\"mousedown\", handleClickOutside);\n        } else {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [openModalWindow, dispatch]);\n\n    return (\n        <>\n            <button className={styles.button} onClick={() => dispatch(entrySliceOpen())}>\n                {props.text}\n            </button>\n            {openModalWindow && (\n                <Modal ref={modalRef} onClose={() => dispatch(entrySliceClose())} />\n            )}\n        </>\n    );\n};\n\nexport default Enrol;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,eAAe,EAAEC,cAAc,QAAQ,kCAAkC;AAClF,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAMC,eAAe,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACC,mBAAmB,CAAC;EAClF,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,QAAQ,GAAGnB,MAAM,CAAC,CAAC;EAEzBD,SAAS,CAAC,MAAM;IACZ,MAAMqB,kBAAkB,GAAIC,KAAK,IAAK;MAClC,IAAIF,QAAQ,CAACG,OAAO,IAAI,CAACH,QAAQ,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAC9DN,QAAQ,CAACd,eAAe,CAAC,CAAC,CAAC;MAC/B;IACJ,CAAC;IAED,IAAIU,eAAe,EAAE;MACjBW,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC9D,CAAC,MAAM;MACHK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IACjE;IAEA,OAAO,MAAM;MACTK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IACjE,CAAC;EACL,CAAC,EAAE,CAACN,eAAe,EAAEI,QAAQ,CAAC,CAAC;EAE/B,oBACIV,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA;MAAQqB,SAAS,EAAE1B,MAAM,CAAC2B,MAAO;MAACC,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAACb,cAAc,CAAC,CAAC,CAAE;MAAAuB,QAAA,EACvEhB,KAAK,CAACoB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EACRtB,eAAe,iBACZN,OAAA,CAACF,KAAK;MAAC+B,GAAG,EAAElB,QAAS;MAACmB,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAACd,eAAe,CAAC,CAAC;IAAE;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACtE;EAAA,eACH,CAAC;AAEX,CAAC;AAACvB,EAAA,CAjCIF,KAAK;EAAA,QACiBT,WAAW,EAClBD,WAAW;AAAA;AAAAsC,EAAA,GAF1B5B,KAAK;AAmCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
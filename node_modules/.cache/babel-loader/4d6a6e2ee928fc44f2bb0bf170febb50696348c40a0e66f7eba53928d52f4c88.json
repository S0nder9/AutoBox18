{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npatr\\\\Documents\\\\GitHub\\\\AutoBox18\\\\autobox\\\\src\\\\Components\\\\UI\\\\Forms\\\\FormForMessage.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useRef, useState, useEffect } from \"react\";\nimport ErrorPopup from \"../ErrorGroup/ErrorPopup\";\nimport SuccessPopup from \"../ErrorGroup/SuccessPopup\";\nimport useValidForm from \"../../../Hooks/useValidForm\";\nimport useHttp from \"../../../Hooks/useHttp\";\nimport styles from \"./FormForMessage.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormForMessage = ({\n  display\n}) => {\n  _s();\n  var _refName$current, _refPhone$current, _refEmail$current, _refText$current;\n  const [errors, setErrors] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(false);\n  const [errorStateForTg, setErrorStateForTg] = useState(undefined);\n  const refName = useRef();\n  const refPhone = useRef();\n  const refEmail = useRef();\n  const refText = useRef();\n  const [refNameValue, setRefNameValue] = useState(\"\");\n  const [refPhoneValue, setRefPhoneValue] = useState(\"\");\n  const [refEmailValue, setRefEmailValue] = useState(\"\");\n  const [refTextValue, setRefTextValue] = useState(\"\");\n\n  // const { notEmpty: isTextNotEmpty, correctPhoneNumber: isPhoneNumberValid, correctEmail: isEmailValid } = useValidForm(refPhoneValue);\n  const {\n    correctPhoneNumber: isPhoneNumberValid\n  } = useValidForm(refPhoneValue);\n  const {\n    correctEmail: isEmailValid\n  } = useValidForm(refEmailValue);\n  const {\n    notEmpty: isTextNotEmpty\n  } = useValidForm(refTextValue);\n  useEffect(() => {\n    if (refName.current) {\n      setRefNameValue(refName.current.value);\n    }\n    if (refPhone.current) {\n      setRefPhoneValue(refPhone.current.value);\n    }\n    if (refEmail.current) {\n      setRefEmailValue(refEmail.current.value);\n    }\n    if (refText.current) {\n      setRefTextValue(refText.current.value);\n    }\n  }, [(_refName$current = refName.current) === null || _refName$current === void 0 ? void 0 : _refName$current.value, (_refPhone$current = refPhone.current) === null || _refPhone$current === void 0 ? void 0 : _refPhone$current.value, (_refEmail$current = refEmail.current) === null || _refEmail$current === void 0 ? void 0 : _refEmail$current.value, (_refText$current = refText.current) === null || _refText$current === void 0 ? void 0 : _refText$current.value]);\n  const handleCheckboxChange = e => {\n    setIsChecked(e.target.checked);\n  };\n  const sentDataHandler = e => {\n    e.preventDefault();\n    const newErrors = [];\n    if (!isPhoneNumberValid) {\n      newErrors.push(\"Укажите номер телефона\");\n    }\n    if (!isEmailValid) {\n      newErrors.push(\"Укажите email\");\n    }\n    if (!isTextNotEmpty) {\n      newErrors.push(\"Укажите текст\");\n    }\n    if (!isChecked) {\n      newErrors.push(\"Вы должны согласиться с политикой конфиденциальности\");\n    }\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      setSuccessMessage(\"\");\n    } else {\n      setErrors([]);\n      setSuccessMessage(\"Ожидайте, мы вам перезвоним\");\n      console.log(`Имя: ${refNameValue}, Номер телефона: ${refPhoneValue}`);\n      sentDataToTelegramHandler();\n    }\n  };\n  const {\n    data\n  } = useHttp(\"https://autobox18-ba317-default-rtdb.firebaseio.com/BotToken.json\", {\n    method: \"GET\"\n  });\n  const sentDataToTelegramHandler = async () => {\n    if (!data) {\n      setErrorStateForTg(true);\n      return;\n    }\n    const botToken = data.Token;\n    const chatId = data.ChatId;\n    const url = `${data.UrlPart1}${botToken}${data.UrlPart2}`;\n    const text = `\n        <b>У вас новая запись, перезвоните:</b>\\n\\n\n        <b>Имя:</b> ${refNameValue || 'Не указано'}\\n\n        <b>Номер телефона:</b> <a href=\"tel:${refPhoneValue || 'Не указан'}\">${refPhoneValue || 'Не указан'}</a>\n        <b>Email:</b> <a href=\"mailto:${refEmailValue || 'Не указан'}\">${refEmailValue || 'Не указан'}</a>\n        <b>Текст сообщения:</b> <em >${refEmailValue || 'Не указан'}</у>\n\n\n        `;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chat_id: chatId,\n          text: text,\n          parse_mode: 'HTML'\n        })\n      });\n      if (!response.ok) {\n        setErrorStateForTg(true);\n      } else {\n        setErrorStateForTg(false);\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке сообщения в Telegram:', error);\n      setErrorStateForTg(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [errors.map((error, index) => /*#__PURE__*/_jsxDEV(ErrorPopup, {\n      timeOut: \"5000\",\n      message: error\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this)), errorStateForTg && /*#__PURE__*/_jsxDEV(ErrorPopup, {\n      timeOut: \"5000\",\n      message: \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043A\\u0430\\u043A\\u0430\\u044F-\\u0442\\u043E \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }, this), errorStateForTg === false && /*#__PURE__*/_jsxDEV(SuccessPopup, {\n      timeOut: \"5000\",\n      message: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      style: {\n        display: display\n      },\n      onSubmit: sentDataHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u0418\\u041C\\u042F\",\n        type: \"text\",\n        name: \"text\",\n        className: \"input\",\n        ref: refName,\n        onChange: () => setRefNameValue(refName.current.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u041D\\u041E\\u041C\\u0415\\u0420 \\u0422\\u0415\\u041B\\u0415\\u0424\\u041E\\u041D\\u0410 *\",\n        type: \"text\",\n        name: \"text\",\n        className: \"input\",\n        ref: refPhone,\n        onChange: () => setRefPhoneValue(refPhone.current.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 EMAIL *\",\n        type: \"text\",\n        name: \"text\",\n        className: \"input\",\n        ref: refEmail,\n        onChange: () => setRefEmailValue(refEmail.current.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u0422\\u0415\\u041A\\u0421\\u0422 *\",\n        type: \"text\",\n        name: \"message\",\n        className: \"input\",\n        style: {\n          height: \"100px\"\n        },\n        ref: refText,\n        onChange: () => setRefTextValue(refText.current.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.privacyContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"privacy\",\n          checked: isChecked,\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"privacy\",\n          className: styles.privacyText,\n          children: [\"\\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u0441 \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/privacy-policy\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.spanColor,\n              children: \"\\u043F\\u043E\\u043B\\u0438\\u0442\\u0438\\u043A\\u043E\\u0439 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        disabled: errorStateForTg === false,\n        style: {\n          backgroundColor: errorStateForTg === false ? \"red\" : \"\",\n          cursor: errorStateForTg === false ? \"not-allowed\" : \"\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"textWhiteSmall\",\n          children: \"\\u041E\\u0422\\u041F\\u0420\\u0410\\u0412\\u0418\\u0422\\u042C \\u0417\\u0410\\u042F\\u0412\\u041A\\u0423\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(FormForMessage, \"ECFiRgyBNluk0J6GFkzVCc2SrbI=\", false, function () {\n  return [useValidForm, useValidForm, useValidForm, useHttp];\n});\n_c = FormForMessage;\nexport default FormForMessage;\nvar _c;\n$RefreshReg$(_c, \"FormForMessage\");","map":{"version":3,"names":["Link","useRef","useState","useEffect","ErrorPopup","SuccessPopup","useValidForm","useHttp","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","FormForMessage","display","_s","_refName$current","_refPhone$current","_refEmail$current","_refText$current","errors","setErrors","successMessage","setSuccessMessage","isChecked","setIsChecked","errorStateForTg","setErrorStateForTg","undefined","refName","refPhone","refEmail","refText","refNameValue","setRefNameValue","refPhoneValue","setRefPhoneValue","refEmailValue","setRefEmailValue","refTextValue","setRefTextValue","correctPhoneNumber","isPhoneNumberValid","correctEmail","isEmailValid","notEmpty","isTextNotEmpty","current","value","handleCheckboxChange","e","target","checked","sentDataHandler","preventDefault","newErrors","push","length","console","log","sentDataToTelegramHandler","data","method","botToken","Token","chatId","ChatId","url","UrlPart1","UrlPart2","text","response","fetch","headers","body","JSON","stringify","chat_id","parse_mode","ok","error","children","map","index","timeOut","message","fileName","_jsxFileName","lineNumber","columnNumber","className","form","style","onSubmit","placeholder","type","name","ref","onChange","height","privacyContainer","id","htmlFor","privacyText","to","spanColor","submitButton","disabled","backgroundColor","cursor","_c","$RefreshReg$"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/autobox/src/Components/UI/Forms/FormForMessage.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport ErrorPopup from \"../ErrorGroup/ErrorPopup\";\r\nimport SuccessPopup from \"../ErrorGroup/SuccessPopup\";\r\nimport useValidForm from \"../../../Hooks/useValidForm\";\r\nimport useHttp from \"../../../Hooks/useHttp\";\r\nimport styles from \"./FormForMessage.module.css\";\r\n\r\nconst FormForMessage = ({ display }) => {\r\n\r\n    const [errors, setErrors] = useState([]);\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [errorStateForTg, setErrorStateForTg] = useState(undefined);\r\n\r\n    const refName = useRef();\r\n    const refPhone = useRef();\r\n    const refEmail = useRef();\r\n    const refText = useRef();\r\n\r\n    const [refNameValue, setRefNameValue] = useState(\"\");\r\n    const [refPhoneValue, setRefPhoneValue] = useState(\"\");\r\n    const [refEmailValue, setRefEmailValue] = useState(\"\");\r\n    const [refTextValue, setRefTextValue] = useState(\"\");\r\n\r\n    // const { notEmpty: isTextNotEmpty, correctPhoneNumber: isPhoneNumberValid, correctEmail: isEmailValid } = useValidForm(refPhoneValue);\r\n    const { correctPhoneNumber: isPhoneNumberValid } = useValidForm(refPhoneValue);\r\n    const { correctEmail: isEmailValid } = useValidForm(refEmailValue);\r\n    const { notEmpty: isTextNotEmpty } = useValidForm(refTextValue);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (refName.current) {\r\n            setRefNameValue(refName.current.value);\r\n        }\r\n\r\n        if (refPhone.current) {\r\n            setRefPhoneValue(refPhone.current.value);\r\n        }\r\n\r\n        if (refEmail.current) {\r\n            setRefEmailValue(refEmail.current.value);\r\n        }\r\n        if (refText.current) {\r\n            setRefTextValue(refText.current.value);\r\n        }\r\n    }, [refName.current?.value, refPhone.current?.value, refEmail.current?.value, refText.current?.value]);\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    const sentDataHandler = (e) => {\r\n        e.preventDefault();\r\n        const newErrors = [];\r\n\r\n        if (!isPhoneNumberValid) {\r\n            newErrors.push(\"Укажите номер телефона\");\r\n        }\r\n\r\n        if (!isEmailValid) {\r\n            newErrors.push(\"Укажите email\");\r\n        }\r\n\r\n        if (!isTextNotEmpty) {\r\n            newErrors.push(\"Укажите текст\");\r\n        }\r\n\r\n        if (!isChecked) {\r\n            newErrors.push(\"Вы должны согласиться с политикой конфиденциальности\");\r\n        }\r\n\r\n        if (newErrors.length > 0) {\r\n            setErrors(newErrors);\r\n            setSuccessMessage(\"\");\r\n        } else {\r\n            setErrors([]);\r\n            setSuccessMessage(\"Ожидайте, мы вам перезвоним\");\r\n            console.log(`Имя: ${refNameValue}, Номер телефона: ${refPhoneValue}`);\r\n            sentDataToTelegramHandler();\r\n        }\r\n    };\r\n\r\n    const { data } = useHttp(\"https://autobox18-ba317-default-rtdb.firebaseio.com/BotToken.json\", { method: \"GET\" });\r\n\r\n    const sentDataToTelegramHandler = async () => {\r\n        if (!data) {\r\n            setErrorStateForTg(true);\r\n            return;\r\n        }\r\n\r\n        const botToken = data.Token;\r\n        const chatId = data.ChatId;\r\n        const url = `${data.UrlPart1}${botToken}${data.UrlPart2}`;\r\n\r\n        const text = `\r\n        <b>У вас новая запись, перезвоните:</b>\\n\\n\r\n        <b>Имя:</b> ${refNameValue || 'Не указано'}\\n\r\n        <b>Номер телефона:</b> <a href=\"tel:${refPhoneValue || 'Не указан'}\">${refPhoneValue || 'Не указан'}</a>\r\n        <b>Email:</b> <a href=\"mailto:${refEmailValue || 'Не указан'}\">${refEmailValue || 'Не указан'}</a>\r\n        <b>Текст сообщения:</b> <em >${refEmailValue || 'Не указан'}</у>\r\n\r\n\r\n        `;\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    chat_id: chatId,\r\n                    text: text,\r\n                    parse_mode: 'HTML',\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                setErrorStateForTg(true);\r\n            } else {\r\n                setErrorStateForTg(false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при отправке сообщения в Telegram:', error);\r\n            setErrorStateForTg(true);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {errors.map((error, index) => (\r\n                <ErrorPopup key={index} timeOut=\"5000\" message={error} />\r\n            ))}\r\n\r\n            {errorStateForTg && <ErrorPopup timeOut=\"5000\" message=\"Произошла какая-то ошибка при отправке данных\" />}\r\n            {errorStateForTg === false && <SuccessPopup timeOut=\"5000\" message={successMessage} />}\r\n            <form className={styles.form} style={{ display: display }} onSubmit={sentDataHandler}>\r\n                <input\r\n                    placeholder=\"ВВЕДИТЕ ИМЯ\"\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    className=\"input\"\r\n                    ref={refName}\r\n                    onChange={() => setRefNameValue(refName.current.value)} />\r\n\r\n                <input\r\n                    placeholder=\"ВВЕДИТЕ НОМЕР ТЕЛЕФОНА *\"\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    className=\"input\"\r\n                    ref={refPhone}\r\n                    onChange={() => setRefPhoneValue(refPhone.current.value)}\r\n                />\r\n\r\n\r\n                <input\r\n                    placeholder=\"ВВЕДИТЕ EMAIL *\"\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    className=\"input\"\r\n                    ref={refEmail}\r\n                    onChange={() => setRefEmailValue(refEmail.current.value)}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"ВВЕДИТЕ ТЕКСТ *\"\r\n                    type=\"text\"\r\n                    name=\"message\"\r\n                    className=\"input\"\r\n                    style={{ height: \"100px\" }}\r\n                    ref={refText}\r\n                    onChange={() => setRefTextValue(refText.current.value)}\r\n                />\r\n\r\n                <div className={styles.privacyContainer}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"privacy\"\r\n                        checked={isChecked}\r\n                        onChange={handleCheckboxChange}\r\n                    />\r\n                    <label htmlFor=\"privacy\" className={styles.privacyText}>\r\n                        согласен с <Link to=\"/privacy-policy\">\r\n                            <span className={styles.spanColor}>политикой конфиденциальности *</span>\r\n                        </Link>\r\n                    </label>\r\n                </div>\r\n\r\n                <button \r\n                type=\"submit\" \r\n                className={styles.submitButton} \r\n                disabled={errorStateForTg === false} \r\n                style={{\r\n                    backgroundColor: errorStateForTg === false ? \"red\" : \"\",\r\n                    cursor: errorStateForTg === false ? \"not-allowed\" : \"\"\r\n                }}>\r\n                    <span className='textWhiteSmall'>ОТПРАВИТЬ ЗАЯВКУ</span>\r\n                </button>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormForMessage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{useState}from\"react\";const useExchangeBuffer=()=>{const[forPopupState,setForPopupState]=useState(undefined);const[textSuccess,setTextSuccess]=useState(\"\");const[textError,setTextError]=useState(\"\");const handleCopy=e=>{const textToCopy=e.target.innerText;navigator.clipboard.writeText(textToCopy).then(()=>{setForPopupState(true);setTextSuccess(\"Текст успешно скопирован в буфер обмена\");setTextError(\"\");setTimeout(()=>setForPopupState(undefined),5000);}).catch(error=>{setForPopupState(false);setTextError(\"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442: \".concat(error));setTextSuccess(\"\");setTimeout(()=>setForPopupState(undefined),5000);});};return{handleCopy,textSuccess,textError,forPopupState};};export default useExchangeBuffer;","map":{"version":3,"names":["useState","useExchangeBuffer","forPopupState","setForPopupState","undefined","textSuccess","setTextSuccess","textError","setTextError","handleCopy","e","textToCopy","target","innerText","navigator","clipboard","writeText","then","setTimeout","catch","error","concat"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/autobox/src/Hooks/useExchangeBuffer.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useExchangeBuffer = () => {\r\n    const [forPopupState, setForPopupState] = useState(undefined);\r\n    const [textSuccess, setTextSuccess] = useState(\"\");\r\n    const [textError, setTextError] = useState(\"\");\r\n\r\n    const handleCopy = (e) => {\r\n        const textToCopy = e.target.innerText;\r\n\r\n        navigator.clipboard.writeText(textToCopy)\r\n            .then(() => {\r\n                setForPopupState(true);\r\n                setTextSuccess(\"Текст успешно скопирован в буфер обмена\");\r\n                setTextError(\"\");\r\n                setTimeout(() => setForPopupState(undefined), 5000);\r\n            })\r\n            .catch((error) => {\r\n                setForPopupState(false);\r\n                setTextError(`Не удалось скопировать текст: ${error}`);\r\n                setTextSuccess(\"\");\r\n                setTimeout(() => setForPopupState(undefined), 5000);\r\n            });\r\n    };\r\n\r\n    return {\r\n        handleCopy,\r\n        textSuccess,\r\n        textError,\r\n        forPopupState\r\n    };\r\n}\r\n\r\nexport default useExchangeBuffer;\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGH,QAAQ,CAACI,SAAS,CAAC,CAC7D,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACO,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAS,UAAU,CAAIC,CAAC,EAAK,CACtB,KAAM,CAAAC,UAAU,CAAGD,CAAC,CAACE,MAAM,CAACC,SAAS,CAErCC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACL,UAAU,CAAC,CACpCM,IAAI,CAAC,IAAM,CACRd,gBAAgB,CAAC,IAAI,CAAC,CACtBG,cAAc,CAAC,yCAAyC,CAAC,CACzDE,YAAY,CAAC,EAAE,CAAC,CAChBU,UAAU,CAAC,IAAMf,gBAAgB,CAACC,SAAS,CAAC,CAAE,IAAI,CAAC,CACvD,CAAC,CAAC,CACDe,KAAK,CAAEC,KAAK,EAAK,CACdjB,gBAAgB,CAAC,KAAK,CAAC,CACvBK,YAAY,+JAAAa,MAAA,CAAkCD,KAAK,CAAE,CAAC,CACtDd,cAAc,CAAC,EAAE,CAAC,CAClBY,UAAU,CAAC,IAAMf,gBAAgB,CAACC,SAAS,CAAC,CAAE,IAAI,CAAC,CACvD,CAAC,CAAC,CACV,CAAC,CAED,MAAO,CACHK,UAAU,CACVJ,WAAW,CACXE,SAAS,CACTL,aACJ,CAAC,CACL,CAAC,CAED,cAAe,CAAAD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
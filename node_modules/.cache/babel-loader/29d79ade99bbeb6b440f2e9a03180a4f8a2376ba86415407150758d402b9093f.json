{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npatr\\\\Documents\\\\GitHub\\\\AutoBox18\\\\src\\\\Components\\\\UI\\\\Cards\\\\PicesAndServicesCard.js\",\n  _s = $RefreshSig$();\n// import EnrolNavigator from \"../Buttons/EnrolNavigator\";\n// import styles from \"./PicesAndServicesCard.module.css\";\n\n// const PicesAndServicesCard = (props) => {\n//     const backgroundImageUrl = props.backgroundImageUrl || \"none\";\n//     const className = styles.cardStyles + \" \" + props.className;\n\n//     return (\n//         <div className={className} style={{backgroundImage: `url('${backgroundImageUrl}')`,}}>\n//             <p className=\"textWhiteBig\">{props.text}</p>\n//             <EnrolNavigator text = \"ПОДРОБНЕЕ\" to = \"/pricesAndServices\"/>\n//         </div>\n//     )\n// }\n\n// export default PicesAndServicesCard;\n\nimport React, { useRef, useEffect } from 'react';\nimport EnrolNavigator from \"../Buttons/EnrolNavigator\";\nimport anime from 'animejs/lib/anime.es.js';\nimport styles from \"./PicesAndServicesCard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PicesAndServicesCard = props => {\n  _s();\n  const cardRef = useRef(null);\n  const backgroundImageUrl = props.backgroundImageUrl || \"none\";\n  const className = styles.cardStyles + \" \" + props.className;\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          anime({\n            targets: entry.target,\n            translateX: 250,\n            endDelay: 1000,\n            direction: 'alternate',\n            opacity: [0, 1],\n            duration: 1500\n          });\n          observer.unobserve(entry.target);\n        }\n      });\n    }, {\n      threshold: 0.1\n    });\n    if (cardRef.current) {\n      observer.observe(cardRef.current);\n    }\n    return () => {\n      if (cardRef.current) {\n        observer.unobserve(cardRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: cardRef,\n    className: className,\n    style: {\n      backgroundImage: `url('${backgroundImageUrl}')`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"textWhiteBig\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EnrolNavigator, {\n      text: \"\\u041F\\u041E\\u0414\\u0420\\u041E\\u0411\\u041D\\u0415\\u0415\",\n      to: \"/pricesAndServices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(PicesAndServicesCard, \"6u/bLyT0WzEP0A9aknmDXb+lDH8=\");\n_c = PicesAndServicesCard;\nexport default PicesAndServicesCard;\nvar _c;\n$RefreshReg$(_c, \"PicesAndServicesCard\");","map":{"version":3,"names":["React","useRef","useEffect","EnrolNavigator","anime","styles","jsxDEV","_jsxDEV","PicesAndServicesCard","props","_s","cardRef","backgroundImageUrl","className","cardStyles","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","targets","target","translateX","endDelay","direction","opacity","duration","unobserve","threshold","current","observe","ref","style","backgroundImage","children","text","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/src/Components/UI/Cards/PicesAndServicesCard.js"],"sourcesContent":["// import EnrolNavigator from \"../Buttons/EnrolNavigator\";\n// import styles from \"./PicesAndServicesCard.module.css\";\n\n// const PicesAndServicesCard = (props) => {\n//     const backgroundImageUrl = props.backgroundImageUrl || \"none\";\n//     const className = styles.cardStyles + \" \" + props.className;\n\n//     return (\n//         <div className={className} style={{backgroundImage: `url('${backgroundImageUrl}')`,}}>\n//             <p className=\"textWhiteBig\">{props.text}</p>\n//             <EnrolNavigator text = \"ПОДРОБНЕЕ\" to = \"/pricesAndServices\"/>\n//         </div>\n//     )\n// }\n\n// export default PicesAndServicesCard;\n\nimport React, { useRef, useEffect } from 'react';\nimport EnrolNavigator from \"../Buttons/EnrolNavigator\";\nimport anime from 'animejs/lib/anime.es.js';\nimport styles from \"./PicesAndServicesCard.module.css\";\n\nconst PicesAndServicesCard = (props) => {\n    const cardRef = useRef(null);\n    const backgroundImageUrl = props.backgroundImageUrl || \"none\";\n    const className = styles.cardStyles + \" \" + props.className;\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            (entries) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        anime({\n                            targets: entry.target,\n                            translateX: 250,\n                            endDelay: 1000,\n                            direction: 'alternate',\n                            opacity: [0, 1],\n                            duration: 1500\n                        });\n                        observer.unobserve(entry.target);\n                    }\n                });\n            },\n            { threshold: 0.1 }\n        );\n\n        if (cardRef.current) {\n            observer.observe(cardRef.current);\n        }\n\n        return () => {\n            if (cardRef.current) {\n                observer.unobserve(cardRef.current);\n            }\n        };\n    }, []);\n\n    return (\n        <div ref={cardRef} className={className} style={{ backgroundImage: `url('${backgroundImageUrl}')` }}>\n            <p className=\"textWhiteBig\">{props.text}</p>\n            <EnrolNavigator text=\"ПОДРОБНЕЕ\" to=\"/pricesAndServices\" />\n        </div>\n    );\n}\n\nexport default PicesAndServicesCard;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,MAAM,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpC,MAAMC,OAAO,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMW,kBAAkB,GAAGH,KAAK,CAACG,kBAAkB,IAAI,MAAM;EAC7D,MAAMC,SAAS,GAAGR,MAAM,CAACS,UAAU,GAAG,GAAG,GAAGL,KAAK,CAACI,SAAS;EAE3DX,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAG,IAAIC,oBAAoB,CACpCC,OAAO,IAAK;MACTA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;QACrB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACtBhB,KAAK,CAAC;YACFiB,OAAO,EAAEF,KAAK,CAACG,MAAM;YACrBC,UAAU,EAAE,GAAG;YACfC,QAAQ,EAAE,IAAI;YACdC,SAAS,EAAE,WAAW;YACtBC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACfC,QAAQ,EAAE;UACd,CAAC,CAAC;UACFZ,QAAQ,CAACa,SAAS,CAACT,KAAK,CAACG,MAAM,CAAC;QACpC;MACJ,CAAC,CAAC;IACN,CAAC,EACD;MAAEO,SAAS,EAAE;IAAI,CACrB,CAAC;IAED,IAAIlB,OAAO,CAACmB,OAAO,EAAE;MACjBf,QAAQ,CAACgB,OAAO,CAACpB,OAAO,CAACmB,OAAO,CAAC;IACrC;IAEA,OAAO,MAAM;MACT,IAAInB,OAAO,CAACmB,OAAO,EAAE;QACjBf,QAAQ,CAACa,SAAS,CAACjB,OAAO,CAACmB,OAAO,CAAC;MACvC;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIvB,OAAA;IAAKyB,GAAG,EAAErB,OAAQ;IAACE,SAAS,EAAEA,SAAU;IAACoB,KAAK,EAAE;MAAEC,eAAe,EAAE,QAAQtB,kBAAkB;IAAK,CAAE;IAAAuB,QAAA,gBAChG5B,OAAA;MAAGM,SAAS,EAAC,cAAc;MAAAsB,QAAA,EAAE1B,KAAK,CAAC2B;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CjC,OAAA,CAACJ,cAAc;MAACiC,IAAI,EAAC,wDAAW;MAACK,EAAE,EAAC;IAAoB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEd,CAAC;AAAA9B,EAAA,CA1CKF,oBAAoB;AAAAkC,EAAA,GAApBlC,oBAAoB;AA4C1B,eAAeA,oBAAoB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npatr\\\\Documents\\\\GitHub\\\\AutoBox18\\\\autobox\\\\src\\\\Hooks\\\\useLeafletMap.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport L from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useLeafletMap = (center, zoom, height, width, markers = [], iconUrl) => {\n  _s();\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (map) {\n      // Очистка предыдущих маркеров\n      map.eachLayer(layer => {\n        if (layer instanceof L.Marker) {\n          map.removeLayer(layer);\n        }\n      });\n\n      // Создание иконки с собственной картинкой\n      const customIcon = L.icon({\n        iconUrl: iconUrl\n      });\n\n      // Добавление новых маркеров\n      markers.forEach(({\n        position,\n        popup\n      }) => {\n        L.marker(position, {\n          icon: customIcon\n        }).addTo(map).bindPopup(popup);\n      });\n    }\n  }, [map, markers, iconUrl]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: zoom,\n    style: {\n      height: height,\n      width: width\n    },\n    whenCreated: setMap,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.position,\n      icon: L.icon({\n        iconUrl\n      }),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: marker.popup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(useLeafletMap, \"4bJBv0PO2rrDzFRchWWuXyIru0A=\");\nexport default useLeafletMap;","map":{"version":3,"names":["useEffect","useState","L","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","useLeafletMap","center","zoom","height","width","markers","iconUrl","_s","map","setMap","eachLayer","layer","removeLayer","customIcon","icon","forEach","position","popup","marker","addTo","bindPopup","style","whenCreated","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","index"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/autobox/src/Hooks/useLeafletMap.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport L from 'leaflet';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst useLeafletMap = (center, zoom, height, width, markers = [], iconUrl) => {\r\n  const [map, setMap] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      // Очистка предыдущих маркеров\r\n      map.eachLayer(layer => {\r\n        if (layer instanceof L.Marker) {\r\n          map.removeLayer(layer);\r\n        }\r\n      });\r\n\r\n      // Создание иконки с собственной картинкой\r\n      const customIcon = L.icon({\r\n        iconUrl: iconUrl,\r\n\r\n      });\r\n\r\n      // Добавление новых маркеров\r\n      markers.forEach(({ position, popup }) => {\r\n        L.marker(position, { icon: customIcon }).addTo(map).bindPopup(popup);\r\n      });\r\n    }\r\n  }, [map, markers, iconUrl]);\r\n\r\n  return (\r\n    <MapContainer center={center} zoom={zoom} style={{ height: height, width: width }} whenCreated={setMap}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution={false}\r\n      />\r\n      {markers.map((marker, index) => (\r\n        <Marker key={index} position={marker.position} icon={L.icon({ iconUrl })}>\r\n          <Popup>{marker.popup}</Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default useLeafletMap;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,CAAC,MAAM,SAAS;AACvB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAACC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,GAAG,EAAE,EAAEC,OAAO,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAIiB,GAAG,EAAE;MACP;MACAA,GAAG,CAACE,SAAS,CAACC,KAAK,IAAI;QACrB,IAAIA,KAAK,YAAYlB,CAAC,CAACG,MAAM,EAAE;UAC7BY,GAAG,CAACI,WAAW,CAACD,KAAK,CAAC;QACxB;MACF,CAAC,CAAC;;MAEF;MACA,MAAME,UAAU,GAAGpB,CAAC,CAACqB,IAAI,CAAC;QACxBR,OAAO,EAAEA;MAEX,CAAC,CAAC;;MAEF;MACAD,OAAO,CAACU,OAAO,CAAC,CAAC;QAAEC,QAAQ;QAAEC;MAAM,CAAC,KAAK;QACvCxB,CAAC,CAACyB,MAAM,CAACF,QAAQ,EAAE;UAAEF,IAAI,EAAED;QAAW,CAAC,CAAC,CAACM,KAAK,CAACX,GAAG,CAAC,CAACY,SAAS,CAACH,KAAK,CAAC;MACtE,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACT,GAAG,EAAEH,OAAO,EAAEC,OAAO,CAAC,CAAC;EAE3B,oBACEP,OAAA,CAACL,YAAY;IAACO,MAAM,EAAEA,MAAO;IAACC,IAAI,EAAEA,IAAK;IAACmB,KAAK,EAAE;MAAElB,MAAM,EAAEA,MAAM;MAAEC,KAAK,EAAEA;IAAM,CAAE;IAACkB,WAAW,EAAEb,MAAO;IAAAc,QAAA,gBACrGxB,OAAA,CAACJ,SAAS;MACR6B,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACDxB,OAAO,CAACG,GAAG,CAAC,CAACU,MAAM,EAAEY,KAAK,kBACzB/B,OAAA,CAACH,MAAM;MAAaoB,QAAQ,EAAEE,MAAM,CAACF,QAAS;MAACF,IAAI,EAAErB,CAAC,CAACqB,IAAI,CAAC;QAAER;MAAQ,CAAC,CAAE;MAAAiB,QAAA,eACvExB,OAAA,CAACF,KAAK;QAAA0B,QAAA,EAAEL,MAAM,CAACD;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC,GADlBC,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACtB,EAAA,CAtCIP,aAAa;AAwCnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
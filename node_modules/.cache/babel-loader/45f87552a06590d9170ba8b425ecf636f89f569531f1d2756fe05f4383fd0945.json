{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npatr\\\\Documents\\\\GitHub\\\\AutoBox18\\\\autobox\\\\src\\\\Components\\\\UI\\\\ErrorGroup\\\\SuccessPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from \"./Error.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuccessPopup = () => {\n  _s();\n  const [show, setShow] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(false), props.ti);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.popup} ${styles.success} ${show ? styles.show : styles.hide}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.popupContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.message,\n        children: \"\\u0423\\u0441\\u043F\\u0435\\u0445!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"box-icon\", {\n        name: \"x\",\n        color: \"#23272e\",\n        className: styles.closeButton,\n        onClick: () => setShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(SuccessPopup, \"7rrxj0wE5iz58YydTDN/pg4Izes=\");\n_c = SuccessPopup;\nexport default SuccessPopup;\nvar _c;\n$RefreshReg$(_c, \"SuccessPopup\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","SuccessPopup","_s","show","setShow","timer","setTimeout","props","ti","clearTimeout","className","popup","success","hide","children","popupContent","message","fileName","_jsxFileName","lineNumber","columnNumber","name","color","closeButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/autobox/src/Components/UI/ErrorGroup/SuccessPopup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from \"./Error.module.css\";\r\n\r\nconst SuccessPopup = () => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setShow(false), props.ti);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`${styles.popup} ${styles.success} ${show ? styles.show : styles.hide}`}>\r\n      <div className={styles.popupContent}>\r\n        <div className={styles.message}>Успех!</div>\r\n        <box-icon name='x' color=\"#23272e\" className={styles.closeButton} onClick={() => setShow(false)} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessPopup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,UAAU,CAAC,MAAMF,OAAO,CAAC,KAAK,CAAC,EAAEG,KAAK,CAACC,EAAE,CAAC;IACxD,OAAO,MAAMC,YAAY,CAACJ,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKU,SAAS,EAAE,GAAGZ,MAAM,CAACa,KAAK,IAAIb,MAAM,CAACc,OAAO,IAAIT,IAAI,GAAGL,MAAM,CAACK,IAAI,GAAGL,MAAM,CAACe,IAAI,EAAG;IAAAC,QAAA,eACtFd,OAAA;MAAKU,SAAS,EAAEZ,MAAM,CAACiB,YAAa;MAAAD,QAAA,gBAClCd,OAAA;QAAKU,SAAS,EAAEZ,MAAM,CAACkB,OAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5CpB,OAAA;QAAUqB,IAAI,EAAC,GAAG;QAACC,KAAK,EAAC,SAAS;QAACZ,SAAS,EAAEZ,MAAM,CAACyB,WAAY;QAACC,OAAO,EAAEA,CAAA,KAAMpB,OAAO,CAAC,KAAK;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhBID,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAkBlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
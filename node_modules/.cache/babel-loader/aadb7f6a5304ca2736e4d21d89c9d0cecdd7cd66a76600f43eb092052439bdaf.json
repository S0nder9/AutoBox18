{"ast":null,"code":"import{Link}from\"react-router-dom\";import{useRef,useState,useEffect}from\"react\";import ErrorPopup from\"../ErrorGroup/ErrorPopup\";import SuccessPopup from\"../ErrorGroup/SuccessPopup\";import useValidForm from\"../../../Hooks/useValidForm\";import useHttp from\"../../../Hooks/useHttp\";import styles from\"./FormForMessage.module.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FormForMessage=_ref=>{var _refName$current,_refPhone$current,_refEmail$current,_refText$current;let{display}=_ref;const[errors,setErrors]=useState([]);const[successMessage,setSuccessMessage]=useState(\"\");const[isChecked,setIsChecked]=useState(false);const[errorStateForTg,setErrorStateForTg]=useState(undefined);const refName=useRef();const refPhone=useRef();const refEmail=useRef();const refText=useRef();const[refNameValue,setRefNameValue]=useState(\"\");const[refPhoneValue,setRefPhoneValue]=useState(\"\");const[refEmailValue,setRefEmailValue]=useState(\"\");const[refTextValue,setRefTextValue]=useState(\"\");// const { notEmty: isTextNotEmpty, correctPhoneNumber: isPhoneNumberValid, correctEmail: isEmailValid } = useValidForm(refPhoneValue);\nconst{correctPhoneNumber:isPhoneNumberValid}=useValidForm(refPhoneValue);const{correctEmail:isEmailValid}=useValidForm(refEmailValue);const{notEmpty:isTextNotEmpty}=useValidForm(refTextValue);useEffect(()=>{if(refName.current){setRefNameValue(refName.current.value);}if(refPhone.current){setRefPhoneValue(refPhone.current.value);}if(refEmail.current){setRefEmailValue(refEmail.current.value);}if(refText.current){setRefTextValue(refText.current.value);}},[(_refName$current=refName.current)===null||_refName$current===void 0?void 0:_refName$current.value,(_refPhone$current=refPhone.current)===null||_refPhone$current===void 0?void 0:_refPhone$current.value,(_refEmail$current=refEmail.current)===null||_refEmail$current===void 0?void 0:_refEmail$current.value,(_refText$current=refText.current)===null||_refText$current===void 0?void 0:_refText$current.value]);const handleCheckboxChange=e=>{setIsChecked(e.target.checked);};const sentDataHandler=e=>{e.preventDefault();const newErrors=[];if(!isPhoneNumberValid){newErrors.push(\"Укажите номер телефона\");}if(!isEmailValid){newErrors.push(\"Укажите email\");}if(!isTextNotEmpty){newErrors.push(\"Укажите текст\");}if(!isChecked){newErrors.push(\"Вы должны согласиться с политикой конфиденциальности\");}if(newErrors.length>0){setErrors(newErrors);setSuccessMessage(\"\");}else{setErrors([]);setSuccessMessage(\"Ожидайте, мы вам перезвоним\");console.log(\"\\u0418\\u043C\\u044F: \".concat(refNameValue,\", \\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430: \").concat(refPhoneValue));sentDataToTelegramHandler();}};const{data}=useHttp(\"https://autobox18-ba317-default-rtdb.firebaseio.com/BotToken.json\",{method:\"GET\"});const sentDataToTelegramHandler=async()=>{if(!data){setErrorStateForTg(true);return;}const botToken=data.Token;const chatId=data.ChatId;const url=\"\".concat(data.UrlPart1).concat(botToken).concat(data.UrlPart2);const text=\"\\n        <b>\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u043E\\u0432\\u043E\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435:</b>\\n\\n        <b>\\u0418\\u043C\\u044F:</b> \".concat(refNameValue||\"Не указано\",\"\\n\\n        <b>\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430:</b> <a href=\\\"tel:\").concat(refPhoneValue||\"Не указан\",\"\\\">\").concat(refPhoneValue||\"Не указан\",\"</a>\\n\\n        <b>Email:</b> <a href=\\\"mailto:\").concat(refEmailValue||\"Не указан\",\"\\\">\").concat(refEmailValue||\"Не указан\",\"</a>\\n\\n        <b>\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F:</b> <em>\").concat(refTextValue||\"Не указан\",\"</em>\\n        \");try{const response=await fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({chat_id:chatId,text:text,parse_mode:\"HTML\"})});if(!response.ok){setErrorStateForTg(true);}else{setErrorStateForTg(false);}}catch(error){console.error(\"Ошибка при отправке сообщения в Telegram:\",error);setErrorStateForTg(true);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[errors.map((error,index)=>/*#__PURE__*/_jsx(ErrorPopup,{timeOut:\"5000\",message:error},index)),errorStateForTg&&/*#__PURE__*/_jsx(ErrorPopup,{timeOut:\"5000\",message:\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043A\\u0430\\u043A\\u0430\\u044F-\\u0442\\u043E \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"}),errorStateForTg===false&&/*#__PURE__*/_jsx(SuccessPopup,{timeOut:\"5000\",message:successMessage}),/*#__PURE__*/_jsxs(\"form\",{className:styles.form,style:{display:display},onSubmit:sentDataHandler,children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u0418\\u041C\\u042F\",type:\"text\",name:\"text\",className:\"input\",ref:refName,onChange:()=>setRefNameValue(refName.current.value)}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u041D\\u041E\\u041C\\u0415\\u0420 \\u0422\\u0415\\u041B\\u0415\\u0424\\u041E\\u041D\\u0410 *\",type:\"number\",name:\"text\",className:\"input\",ref:refPhone,onChange:()=>setRefPhoneValue(refPhone.current.value)}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 EMAIL *\",type:\"email\",name:\"text\",className:\"input\",ref:refEmail,onChange:()=>setRefEmailValue(refEmail.current.value)}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u0422\\u0415\\u041A\\u0421\\u0422 *\",type:\"text\",name:\"message\",className:\"input\",style:{height:\"100px\"},ref:refText,onChange:()=>setRefTextValue(refText.current.value)}),/*#__PURE__*/_jsxs(\"div\",{className:styles.privacyContainer,children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"privacy\",checked:isChecked,onChange:handleCheckboxChange}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"privacy\",className:styles.privacyText,children:[\"\\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u0441\",\" \",/*#__PURE__*/_jsx(Link,{to:\"/privacyPolicy\",children:/*#__PURE__*/_jsx(\"span\",{className:styles.spanColor,children:\"\\u043F\\u043E\\u043B\\u0438\\u0442\\u0438\\u043A\\u043E\\u0439 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438 *\"})})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.submitButton,disabled:errorStateForTg===false,style:{backgroundColor:errorStateForTg===false?\"red\":\"\",cursor:errorStateForTg===false?\"not-allowed\":\"\"},children:/*#__PURE__*/_jsx(\"span\",{className:\"textWhiteSmall\",children:\"\\u041E\\u0422\\u041F\\u0420\\u0410\\u0412\\u0418\\u0422\\u042C \\u0417\\u0410\\u042F\\u0412\\u041A\\u0423\"})})]})]});};export default FormForMessage;","map":{"version":3,"names":["Link","useRef","useState","useEffect","ErrorPopup","SuccessPopup","useValidForm","useHttp","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FormForMessage","_ref","_refName$current","_refPhone$current","_refEmail$current","_refText$current","display","errors","setErrors","successMessage","setSuccessMessage","isChecked","setIsChecked","errorStateForTg","setErrorStateForTg","undefined","refName","refPhone","refEmail","refText","refNameValue","setRefNameValue","refPhoneValue","setRefPhoneValue","refEmailValue","setRefEmailValue","refTextValue","setRefTextValue","correctPhoneNumber","isPhoneNumberValid","correctEmail","isEmailValid","notEmpty","isTextNotEmpty","current","value","handleCheckboxChange","e","target","checked","sentDataHandler","preventDefault","newErrors","push","length","console","log","concat","sentDataToTelegramHandler","data","method","botToken","Token","chatId","ChatId","url","UrlPart1","UrlPart2","text","response","fetch","headers","body","JSON","stringify","chat_id","parse_mode","ok","error","children","map","index","timeOut","message","className","form","style","onSubmit","placeholder","type","name","ref","onChange","height","privacyContainer","id","htmlFor","privacyText","to","spanColor","submitButton","disabled","backgroundColor","cursor"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/autobox/src/Components/UI/Forms/FormForMessage.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport ErrorPopup from \"../ErrorGroup/ErrorPopup\";\r\nimport SuccessPopup from \"../ErrorGroup/SuccessPopup\";\r\nimport useValidForm from \"../../../Hooks/useValidForm\";\r\nimport useHttp from \"../../../Hooks/useHttp\";\r\nimport styles from \"./FormForMessage.module.css\";\r\n\r\nconst FormForMessage = ({ display }) => {\r\n    const [errors, setErrors] = useState([]);\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [errorStateForTg, setErrorStateForTg] = useState(undefined);\r\n\r\n    const refName = useRef();\r\n    const refPhone = useRef();\r\n    const refEmail = useRef();\r\n    const refText = useRef();\r\n\r\n    const [refNameValue, setRefNameValue] = useState(\"\");\r\n    const [refPhoneValue, setRefPhoneValue] = useState(\"\");\r\n    const [refEmailValue, setRefEmailValue] = useState(\"\");\r\n    const [refTextValue, setRefTextValue] = useState(\"\");\r\n\r\n    // const { notEmty: isTextNotEmpty, correctPhoneNumber: isPhoneNumberValid, correctEmail: isEmailValid } = useValidForm(refPhoneValue);\r\n    const { correctPhoneNumber: isPhoneNumberValid } =\r\n        useValidForm(refPhoneValue);\r\n    const { correctEmail: isEmailValid } = useValidForm(refEmailValue);\r\n    const { notEmpty: isTextNotEmpty } = useValidForm(refTextValue);\r\n\r\n    useEffect(() => {\r\n        if (refName.current) {\r\n            setRefNameValue(refName.current.value);\r\n        }\r\n\r\n        if (refPhone.current) {\r\n            setRefPhoneValue(refPhone.current.value);\r\n        }\r\n\r\n        if (refEmail.current) {\r\n            setRefEmailValue(refEmail.current.value);\r\n        }\r\n        if (refText.current) {\r\n            setRefTextValue(refText.current.value);\r\n        }\r\n    }, [\r\n        refName.current?.value,\r\n        refPhone.current?.value,\r\n        refEmail.current?.value,\r\n        refText.current?.value,\r\n    ]);\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    const sentDataHandler = (e) => {\r\n        e.preventDefault();\r\n        const newErrors = [];\r\n\r\n        if (!isPhoneNumberValid) {\r\n            newErrors.push(\"Укажите номер телефона\");\r\n        }\r\n\r\n        if (!isEmailValid) {\r\n            newErrors.push(\"Укажите email\");\r\n        }\r\n\r\n        if (!isTextNotEmpty) {\r\n            newErrors.push(\"Укажите текст\");\r\n        }\r\n\r\n        if (!isChecked) {\r\n            newErrors.push(\r\n                \"Вы должны согласиться с политикой конфиденциальности\"\r\n            );\r\n        }\r\n\r\n        if (newErrors.length > 0) {\r\n            setErrors(newErrors);\r\n            setSuccessMessage(\"\");\r\n        } else {\r\n            setErrors([]);\r\n            setSuccessMessage(\"Ожидайте, мы вам перезвоним\");\r\n            console.log(\r\n                `Имя: ${refNameValue}, Номер телефона: ${refPhoneValue}`\r\n            );\r\n            sentDataToTelegramHandler();\r\n        }\r\n    };\r\n\r\n    const { data } = useHttp(\r\n        \"https://autobox18-ba317-default-rtdb.firebaseio.com/BotToken.json\",\r\n        { method: \"GET\" }\r\n    );\r\n\r\n    const sentDataToTelegramHandler = async () => {\r\n        if (!data) {\r\n            setErrorStateForTg(true);\r\n            return;\r\n        }\r\n\r\n        const botToken = data.Token;\r\n        const chatId = data.ChatId;\r\n        const url = `${data.UrlPart1}${botToken}${data.UrlPart2}`;\r\n\r\n        const text = `\r\n        <b>У вас новое сообщение:</b>\\n\r\n        <b>Имя:</b> ${refNameValue || \"Не указано\"}\\n\r\n        <b>Номер телефона:</b> <a href=\"tel:${refPhoneValue || \"Не указан\"}\">${\r\n            refPhoneValue || \"Не указан\"\r\n        }</a>\\n\r\n        <b>Email:</b> <a href=\"mailto:${refEmailValue || \"Не указан\"}\">${\r\n            refEmailValue || \"Не указан\"\r\n        }</a>\\n\r\n        <b>Текст сообщения:</b> <em>${refTextValue || \"Не указан\"}</em>\r\n        `;\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    chat_id: chatId,\r\n                    text: text,\r\n                    parse_mode: \"HTML\",\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                setErrorStateForTg(true);\r\n            } else {\r\n                setErrorStateForTg(false);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Ошибка при отправке сообщения в Telegram:\", error);\r\n            setErrorStateForTg(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {errors.map((error, index) => (\r\n                <ErrorPopup key={index} timeOut=\"5000\" message={error} />\r\n            ))}\r\n\r\n            {errorStateForTg && (\r\n                <ErrorPopup\r\n                    timeOut=\"5000\"\r\n                    message=\"Произошла какая-то ошибка при отправке данных\"\r\n                />\r\n            )}\r\n            {errorStateForTg === false && (\r\n                <SuccessPopup timeOut=\"5000\" message={successMessage} />\r\n            )}\r\n            <form\r\n                className={styles.form}\r\n                style={{ display: display }}\r\n                onSubmit={sentDataHandler}\r\n            >\r\n                <input\r\n                    placeholder=\"ВВЕДИТЕ ИМЯ\"\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    className=\"input\"\r\n                    ref={refName}\r\n                    onChange={() => setRefNameValue(refName.current.value)}\r\n                />\r\n\r\n                <input\r\n                    placeholder=\"ВВЕДИТЕ НОМЕР ТЕЛЕФОНА *\"\r\n                    type=\"number\"\r\n                    name=\"text\"\r\n                    className=\"input\"\r\n                    ref={refPhone}\r\n                    onChange={() => setRefPhoneValue(refPhone.current.value)}\r\n                />\r\n\r\n                <input\r\n                    placeholder=\"ВВЕДИТЕ EMAIL *\"\r\n                    type=\"email\"\r\n                    name=\"text\"\r\n                    className=\"input\"\r\n                    ref={refEmail}\r\n                    onChange={() => setRefEmailValue(refEmail.current.value)}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"ВВЕДИТЕ ТЕКСТ *\"\r\n                    type=\"text\"\r\n                    name=\"message\"\r\n                    className=\"input\"\r\n                    style={{ height: \"100px\" }}\r\n                    ref={refText}\r\n                    onChange={() => setRefTextValue(refText.current.value)}\r\n                />\r\n\r\n                <div className={styles.privacyContainer}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"privacy\"\r\n                        checked={isChecked}\r\n                        onChange={handleCheckboxChange}\r\n                    />\r\n                    <label htmlFor=\"privacy\" className={styles.privacyText}>\r\n                        согласен с{\" \"}\r\n                        <Link to=\"/privacyPolicy\">\r\n                            <span className={styles.spanColor}>\r\n                                политикой конфиденциальности *\r\n                            </span>\r\n                        </Link>\r\n                    </label>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className={styles.submitButton}\r\n                    disabled={errorStateForTg === false}\r\n                    style={{\r\n                        backgroundColor: errorStateForTg === false ? \"red\" : \"\",\r\n                        cursor: errorStateForTg === false ? \"not-allowed\" : \"\",\r\n                    }}\r\n                >\r\n                    <span className=\"textWhiteSmall\">ОТПРАВИТЬ ЗАЯВКУ</span>\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormForMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
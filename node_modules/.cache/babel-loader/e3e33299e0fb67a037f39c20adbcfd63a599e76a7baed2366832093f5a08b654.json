{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npatr\\\\Documents\\\\GitHub\\\\AutoBox18\\\\autobox\\\\src\\\\Components\\\\UI\\\\Forms\\\\FormForMessage.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useRef, useState, useEffect } from \"react\";\nimport ErrorPopup from \"../ErrorGroup/ErrorPopup\";\nimport SuccessPopup from \"../ErrorGroup/SuccessPopup\";\nimport useValidForm from \"../../../Hooks/useValidForm\";\nimport useHttp from \"../../../Hooks/useHttp\";\nimport styles from \"./FormForMessage.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormForMessage = ({\n  display\n}) => {\n  _s();\n  var _refName$current, _refPhone$current, _refEmail$current, _refText$current;\n  const [errors, setErrors] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(false);\n  const [errorStateForTg, setErrorStateForTg] = useState(undefined);\n  const refName = useRef();\n  const refPhone = useRef();\n  const refEmail = useRef();\n  const refText = useRef();\n  const [refNameValue, setRefNameValue] = useState(\"\");\n  const [refPhoneValue, setRefPhoneValue] = useState(\"\");\n  const [refEmailValue, setRefEmailValue] = useState(\"\");\n  const [refTextValue, setRefTextValue] = useState(\"\");\n\n  // const { notEmpty: isTextNotEmpty, correctPhoneNumber: isPhoneNumberValid, correctEmail: isEmailValid } = useValidForm(refPhoneValue);\n  const {\n    correctPhoneNumber: isPhoneNumberValid\n  } = useValidForm(refPhoneValue);\n  const {\n    correctEmail: isEmailValid\n  } = useValidForm(refEmailValue);\n  const {\n    notEmpty: isTextNotEmpty\n  } = useValidForm(refTextValue);\n  useEffect(() => {\n    if (refName.current) {\n      setRefNameValue(refName.current.value);\n    }\n    if (refPhone.current) {\n      setRefPhoneValue(refPhone.current.value);\n    }\n    if (refEmail.current) {\n      setRefEmailValue(refEmail.current.value);\n    }\n    if (refText.current) {\n      setRefTextValue(refText.current.value);\n    }\n  }, [(_refName$current = refName.current) === null || _refName$current === void 0 ? void 0 : _refName$current.value, (_refPhone$current = refPhone.current) === null || _refPhone$current === void 0 ? void 0 : _refPhone$current.value, (_refEmail$current = refEmail.current) === null || _refEmail$current === void 0 ? void 0 : _refEmail$current.value, (_refText$current = refText.current) === null || _refText$current === void 0 ? void 0 : _refText$current.value]);\n  const handleCheckboxChange = e => {\n    setIsChecked(e.target.checked);\n  };\n  const sentDataHandler = e => {\n    e.preventDefault();\n    const newErrors = [];\n    if (!isPhoneNumberValid) {\n      newErrors.push(\"Укажите номер телефона\");\n    }\n    if (!isEmailValid) {\n      newErrors.push(\"Укажите email\");\n    }\n    if (!isTextNotEmpty) {\n      newErrors.push(\"Укажите текст\");\n    }\n    if (!isChecked) {\n      newErrors.push(\"Вы должны согласиться с политикой конфиденциальности\");\n    }\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      setSuccessMessage(\"\");\n    } else {\n      setErrors([]);\n      setSuccessMessage(\"Ожидайте, мы вам перезвоним\");\n      console.log(`Имя: ${refNameValue}, Номер телефона: ${refPhoneValue}`);\n      sentDataToTelegramHandler();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [errors.map((error, index) => /*#__PURE__*/_jsxDEV(ErrorPopup, {\n      timeOut: \"5000\",\n      message: error\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      style: {\n        display: display\n      },\n      onSubmit: sentDataHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u0418\\u041C\\u042F\",\n        type: \"text\",\n        name: \"text\",\n        className: \"input\",\n        ref: refName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u041D\\u041E\\u041C\\u0415\\u0420 \\u0422\\u0415\\u041B\\u0415\\u0424\\u041E\\u041D\\u0410 *\",\n        type: \"text\",\n        name: \"text\",\n        className: \"input\",\n        ref: refPhone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 EMAIL *\",\n        type: \"text\",\n        name: \"text\",\n        className: \"input\",\n        ref: refEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u0422\\u0415\\u041A\\u0421\\u0422 *\",\n        type: \"text\",\n        name: \"message\",\n        className: \"input\",\n        style: {\n          height: \"100px\"\n        },\n        ref: refText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.privacyContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"privacy\",\n          className: styles.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"privacy\",\n          className: styles.privacyText,\n          children: [\"\\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u0441 \", /*#__PURE__*/_jsxDEV(Link, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.spanColor,\n              children: \"\\u043F\\u043E\\u043B\\u0438\\u0442\\u0438\\u043A\\u043E\\u0439 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        disabled: errorStateForTg === false,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"textWhiteSmall\",\n          children: \"\\u041E\\u0422\\u041F\\u0420\\u0410\\u0412\\u0418\\u0422\\u042C \\u0417\\u0410\\u042F\\u0412\\u041A\\u0423\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(FormForMessage, \"8uT1+j0e5iNZSgSSNknvq3cM1a0=\", false, function () {\n  return [useValidForm, useValidForm, useValidForm];\n});\n_c = FormForMessage;\nexport default FormForMessage;\nvar _c;\n$RefreshReg$(_c, \"FormForMessage\");","map":{"version":3,"names":["Link","useRef","useState","useEffect","ErrorPopup","SuccessPopup","useValidForm","useHttp","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","FormForMessage","display","_s","_refName$current","_refPhone$current","_refEmail$current","_refText$current","errors","setErrors","successMessage","setSuccessMessage","isChecked","setIsChecked","errorStateForTg","setErrorStateForTg","undefined","refName","refPhone","refEmail","refText","refNameValue","setRefNameValue","refPhoneValue","setRefPhoneValue","refEmailValue","setRefEmailValue","refTextValue","setRefTextValue","correctPhoneNumber","isPhoneNumberValid","correctEmail","isEmailValid","notEmpty","isTextNotEmpty","current","value","handleCheckboxChange","e","target","checked","sentDataHandler","preventDefault","newErrors","push","length","console","log","sentDataToTelegramHandler","children","map","error","index","timeOut","message","fileName","_jsxFileName","lineNumber","columnNumber","className","form","style","onSubmit","placeholder","type","name","ref","height","privacyContainer","id","checkbox","htmlFor","privacyText","spanColor","submitButton","disabled","_c","$RefreshReg$"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/autobox/src/Components/UI/Forms/FormForMessage.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport ErrorPopup from \"../ErrorGroup/ErrorPopup\";\r\nimport SuccessPopup from \"../ErrorGroup/SuccessPopup\";\r\nimport useValidForm from \"../../../Hooks/useValidForm\";\r\nimport useHttp from \"../../../Hooks/useHttp\";\r\nimport styles from \"./FormForMessage.module.css\";\r\n\r\nconst FormForMessage = ({ display }) => {\r\n\r\n    const [errors, setErrors] = useState([]);\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [errorStateForTg, setErrorStateForTg] = useState(undefined);\r\n\r\n    const refName = useRef();\r\n    const refPhone = useRef();\r\n    const refEmail = useRef();\r\n    const refText = useRef();\r\n\r\n    const [refNameValue, setRefNameValue] = useState(\"\");\r\n    const [refPhoneValue, setRefPhoneValue] = useState(\"\");\r\n    const [refEmailValue, setRefEmailValue] = useState(\"\");\r\n    const [refTextValue, setRefTextValue] = useState(\"\");\r\n\r\n    // const { notEmpty: isTextNotEmpty, correctPhoneNumber: isPhoneNumberValid, correctEmail: isEmailValid } = useValidForm(refPhoneValue);\r\n    const { correctPhoneNumber: isPhoneNumberValid } = useValidForm(refPhoneValue);\r\n    const { correctEmail: isEmailValid } = useValidForm(refEmailValue);\r\n    const { notEmpty: isTextNotEmpty } = useValidForm(refTextValue);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (refName.current) {\r\n            setRefNameValue(refName.current.value);\r\n        }\r\n\r\n        if (refPhone.current) {\r\n            setRefPhoneValue(refPhone.current.value);\r\n        }\r\n\r\n        if (refEmail.current) {\r\n            setRefEmailValue(refEmail.current.value);\r\n        }\r\n        if (refText.current) {\r\n            setRefTextValue(refText.current.value);\r\n        }\r\n    }, [refName.current?.value, refPhone.current?.value, refEmail.current?.value, refText.current?.value]);\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    const sentDataHandler = (e) => {\r\n        e.preventDefault();\r\n        const newErrors = [];\r\n\r\n        if (!isPhoneNumberValid) {\r\n            newErrors.push(\"Укажите номер телефона\");\r\n        }\r\n\r\n        if (!isEmailValid) {\r\n            newErrors.push(\"Укажите email\");\r\n        }\r\n\r\n        if (!isTextNotEmpty) {\r\n            newErrors.push(\"Укажите текст\");\r\n        }\r\n\r\n        if (!isChecked) {\r\n            newErrors.push(\"Вы должны согласиться с политикой конфиденциальности\");\r\n        }\r\n\r\n        if (newErrors.length > 0) {\r\n            setErrors(newErrors);\r\n            setSuccessMessage(\"\");\r\n        } else {\r\n            setErrors([]);\r\n            setSuccessMessage(\"Ожидайте, мы вам перезвоним\");\r\n            console.log(`Имя: ${refNameValue}, Номер телефона: ${refPhoneValue}`);\r\n            sentDataToTelegramHandler();\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {errors.map((error, index) => (\r\n                <ErrorPopup key={index} timeOut=\"5000\" message={error} />\r\n            ))}\r\n            <form className={styles.form} style={{ display: display }} onSubmit={sentDataHandler}>\r\n                <input placeholder=\"ВВЕДИТЕ ИМЯ\" type=\"text\" name=\"text\" className=\"input\" ref={refName}/>\r\n                <input placeholder=\"ВВЕДИТЕ НОМЕР ТЕЛЕФОНА *\" type=\"text\" name=\"text\" className=\"input\" ref={refPhone}/>\r\n                <input placeholder=\"ВВЕДИТЕ EMAIL *\" type=\"text\" name=\"text\" className=\"input\" ref={refEmail}/>\r\n                <textarea placeholder=\"ВВЕДИТЕ ТЕКСТ *\" type=\"text\" name=\"message\" className=\"input\" style={{ height: \"100px\" }} ref={refText}/>\r\n\r\n                <div className={styles.privacyContainer}>\r\n                    <input type=\"checkbox\" id=\"privacy\" className={styles.checkbox} />\r\n                    <label htmlFor=\"privacy\" className={styles.privacyText}>согласен с <Link>\r\n                        <span className={styles.spanColor}>политикой конфиденциальности *</span>\r\n                    </Link></label>\r\n                </div>\r\n\r\n                <button \r\n                type=\"submit\" \r\n                className={styles.submitButton} \r\n                disabled={errorStateForTg === false} >\r\n                    <span className='textWhiteSmall'>ОТПРАВИТЬ ЗАЯВКУ</span>\r\n                </button>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormForMessage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
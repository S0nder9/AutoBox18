{"ast":null,"code":"import{Link}from\"react-router-dom\";import styles from\"./FormForCall.module.css\";import{useRef,useState,useEffect}from\"react\";import ErrorPopup from\"../ErrorGroup/ErrorPopup\";import SuccessPopup from\"../ErrorGroup/SuccessPopup\";import useValidForm from\"../../../Hooks/useValidForm\";import useHttp from\"../../../Hooks/useHttp\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FormForCall=_ref=>{var _refName$current,_refPhone$current;let{display}=_ref;const[errors,setErrors]=useState([]);const[successMessage,setSuccessMessage]=useState(\"\");const[isChecked,setIsChecked]=useState(false);const[errorStateForTg,setErrorStateForTg]=useState(undefined);const refName=useRef();const refPhone=useRef();const[refNameValue,setRefNameValue]=useState(\"\");const[refPhoneValue,setRefPhoneValue]=useState(\"\");const{notEmpty:isNameNotEmpty,correctPhoneNumber:isPhoneNumberValid}=useValidForm(refPhoneValue,0,Infinity,0,0,0);useEffect(()=>{if(refName.current){setRefNameValue(refName.current.value);}if(refPhone.current){setRefPhoneValue(refPhone.current.value);}},[(_refName$current=refName.current)===null||_refName$current===void 0?void 0:_refName$current.value,(_refPhone$current=refPhone.current)===null||_refPhone$current===void 0?void 0:_refPhone$current.value]);const handleCheckboxChange=e=>{setIsChecked(e.target.checked);};const sentDataHandler=e=>{e.preventDefault();const newErrors=[];if(!isPhoneNumberValid){newErrors.push(\"Укажите номер телефона\");}if(!isChecked){newErrors.push(\"Вы должны согласиться с политикой конфиденциальности\");}if(newErrors.length>0){setErrors(newErrors);setSuccessMessage(\"\");}else{setErrors([]);setSuccessMessage(\"Ожидайте, мы вам перезвоним\");console.log(\"\\u0418\\u043C\\u044F: \".concat(refNameValue,\", \\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430: \").concat(refPhoneValue));sentDataToTelegramHandler();}};const{data}=useHttp(\"https://autobox18-ba317-default-rtdb.firebaseio.com/BotToken.json\",{method:\"GET\"});const sentDataToTelegramHandler=async()=>{if(!data){setErrorStateForTg(true);return;}const botToken=data.Token;const chatId=data.ChatId;const url=\"\".concat(data.UrlPart1).concat(botToken).concat(data.UrlPart2);const text=\"\\n        <b>\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u043E\\u0432\\u0430\\u044F \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C, \\u043F\\u0435\\u0440\\u0435\\u0437\\u0432\\u043E\\u043D\\u0438\\u0442\\u0435:</b>\\n\\n\\n        <b>\\u0418\\u043C\\u044F:</b> \".concat(refNameValue||'Не указано',\"\\n\\n        <b>\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430:</b> <a href=\\\"tel:\").concat(refPhoneValue||'Не указан',\"\\\">\").concat(refPhoneValue||'Не указан',\"</a>\\n        \");try{const response=await fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({chat_id:chatId,text:text,parse_mode:'HTML'})});if(!response.ok){setErrorStateForTg(true);}else{setErrorStateForTg(false);}}catch(error){console.error('Ошибка при отправке сообщения в Telegram:',error);setErrorStateForTg(true);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[errors.map((error,index)=>/*#__PURE__*/_jsx(ErrorPopup,{timeOut:\"5000\",message:error},index)),errorStateForTg&&/*#__PURE__*/_jsx(ErrorPopup,{timeOut:\"5000\",message:\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043A\\u0430\\u043A\\u0430\\u044F-\\u0442\\u043E \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"}),errorStateForTg===false&&/*#__PURE__*/_jsx(SuccessPopup,{timeOut:\"5000\",message:successMessage}),/*#__PURE__*/_jsxs(\"form\",{className:styles.form,style:{display:display},onSubmit:sentDataHandler,children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u0418\\u041C\\u042F\",type:\"text\",name:\"text\",className:\"input\",ref:refName,onChange:()=>setRefNameValue(refName.current.value),value:refNameValue}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"\\u0412\\u0412\\u0415\\u0414\\u0418\\u0422\\u0415 \\u041D\\u041E\\u041C\\u0415\\u0420 \\u0422\\u0415\\u041B\\u0415\\u0424\\u041E\\u041D\\u0410 *\",type:\"number\",name:\"number\",className:\"input\",ref:refPhone,onChange:()=>setRefPhoneValue(refPhone.current.value),value:refPhoneValue}),/*#__PURE__*/_jsxs(\"div\",{className:styles.privacyContainer,children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"privacy\",checked:isChecked,onChange:handleCheckboxChange}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"privacy\",className:styles.privacyText,children:[\"\\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u0441 \",/*#__PURE__*/_jsx(Link,{to:\"/privacyPolicy\",children:/*#__PURE__*/_jsx(\"span\",{className:styles.spanColor,children:\"\\u043F\\u043E\\u043B\\u0438\\u0442\\u0438\\u043A\\u043E\\u0439 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438 *\"})})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.submitButton,disabled:errorStateForTg===false,style:{backgroundColor:errorStateForTg===false?\"red\":\"\",cursor:errorStateForTg===false?\"not-allowed\":\"\"},children:/*#__PURE__*/_jsx(\"span\",{className:\"textWhiteSmall\",children:\"\\u041E\\u0422\\u041F\\u0420\\u0410\\u0412\\u0418\\u0422\\u042C \\u0417\\u0410\\u042F\\u0412\\u041A\\u0423\"})})]})]});};export default FormForCall;","map":{"version":3,"names":["Link","styles","useRef","useState","useEffect","ErrorPopup","SuccessPopup","useValidForm","useHttp","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FormForCall","_ref","_refName$current","_refPhone$current","display","errors","setErrors","successMessage","setSuccessMessage","isChecked","setIsChecked","errorStateForTg","setErrorStateForTg","undefined","refName","refPhone","refNameValue","setRefNameValue","refPhoneValue","setRefPhoneValue","notEmpty","isNameNotEmpty","correctPhoneNumber","isPhoneNumberValid","Infinity","current","value","handleCheckboxChange","e","target","checked","sentDataHandler","preventDefault","newErrors","push","length","console","log","concat","sentDataToTelegramHandler","data","method","botToken","Token","chatId","ChatId","url","UrlPart1","UrlPart2","text","response","fetch","headers","body","JSON","stringify","chat_id","parse_mode","ok","error","children","map","index","timeOut","message","className","form","style","onSubmit","placeholder","type","name","ref","onChange","privacyContainer","id","htmlFor","privacyText","to","spanColor","submitButton","disabled","backgroundColor","cursor"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/src/Components/UI/Forms/FormForCall.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styles from \"./FormForCall.module.css\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport ErrorPopup from \"../ErrorGroup/ErrorPopup\";\r\nimport SuccessPopup from \"../ErrorGroup/SuccessPopup\";\r\nimport useValidForm from \"../../../Hooks/useValidForm\";\r\nimport useHttp from \"../../../Hooks/useHttp\";\r\n\r\nconst FormForCall = ({ display }) => {\r\n    const [errors, setErrors] = useState([]);\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [errorStateForTg, setErrorStateForTg] = useState(undefined);\r\n\r\n    const refName = useRef();\r\n    const refPhone = useRef();\r\n\r\n    const [refNameValue, setRefNameValue] = useState(\"\");\r\n    const [refPhoneValue, setRefPhoneValue] = useState(\"\");\r\n\r\n    const { notEmpty: isNameNotEmpty, correctPhoneNumber: isPhoneNumberValid } = useValidForm(refPhoneValue, 0, Infinity, 0, 0, 0);\r\n\r\n    useEffect(() => {\r\n        if (refName.current) {\r\n            setRefNameValue(refName.current.value);\r\n        }\r\n        if (refPhone.current) {\r\n            setRefPhoneValue(refPhone.current.value);\r\n        }\r\n    }, [refName.current?.value, refPhone.current?.value]);\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    const sentDataHandler = (e) => {\r\n        e.preventDefault();\r\n        const newErrors = [];\r\n\r\n        if (!isPhoneNumberValid) {\r\n            newErrors.push(\"Укажите номер телефона\");\r\n        }\r\n\r\n        if (!isChecked) {\r\n            newErrors.push(\"Вы должны согласиться с политикой конфиденциальности\");\r\n        }\r\n\r\n        if (newErrors.length > 0) {\r\n            setErrors(newErrors);\r\n            setSuccessMessage(\"\");\r\n        } else {\r\n            setErrors([]);\r\n            setSuccessMessage(\"Ожидайте, мы вам перезвоним\");\r\n            console.log(`Имя: ${refNameValue}, Номер телефона: ${refPhoneValue}`);\r\n            sentDataToTelegramHandler();\r\n        }\r\n    };\r\n\r\n    const { data } = useHttp(\"https://autobox18-ba317-default-rtdb.firebaseio.com/BotToken.json\", { method: \"GET\" });\r\n\r\n    const sentDataToTelegramHandler = async () => {\r\n        if (!data) {\r\n            setErrorStateForTg(true);\r\n            return;\r\n        }\r\n\r\n        const botToken = data.Token;\r\n        const chatId = data.ChatId;\r\n        const url = `${data.UrlPart1}${botToken}${data.UrlPart2}`;\r\n\r\n        const text = `\r\n        <b>У вас новая запись, перезвоните:</b>\\n\\n\r\n        <b>Имя:</b> ${refNameValue || 'Не указано'}\\n\r\n        <b>Номер телефона:</b> <a href=\"tel:${refPhoneValue || 'Не указан'}\">${refPhoneValue || 'Не указан'}</a>\r\n        `;\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    chat_id: chatId,\r\n                    text: text,\r\n                    parse_mode: 'HTML',\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                setErrorStateForTg(true);\r\n            } else {\r\n                setErrorStateForTg(false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при отправке сообщения в Telegram:', error);\r\n            setErrorStateForTg(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {errors.map((error, index) => (\r\n                <ErrorPopup key={index} timeOut=\"5000\" message={error} />\r\n            ))}\r\n\r\n            {errorStateForTg && <ErrorPopup timeOut=\"5000\" message=\"Произошла какая-то ошибка при отправке данных\" />}\r\n            {errorStateForTg === false && <SuccessPopup timeOut=\"5000\" message={successMessage} />}\r\n\r\n            <form className={styles.form} style={{ display: display }} onSubmit={sentDataHandler}>\r\n                <input\r\n                    placeholder=\"ВВЕДИТЕ ИМЯ\"\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    className=\"input\"\r\n                    ref={refName}\r\n                    onChange={() => setRefNameValue(refName.current.value)}\r\n                    value={refNameValue}\r\n                />\r\n\r\n                <input\r\n                    placeholder=\"ВВЕДИТЕ НОМЕР ТЕЛЕФОНА *\"\r\n                    type=\"number\"\r\n                    name=\"number\"\r\n                    className=\"input\"\r\n                    ref={refPhone}\r\n                    onChange={() => setRefPhoneValue(refPhone.current.value)}\r\n                    value={refPhoneValue}\r\n                />\r\n\r\n                <div className={styles.privacyContainer}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"privacy\"\r\n                        checked={isChecked}\r\n                        onChange={handleCheckboxChange}\r\n                    />\r\n                    <label htmlFor=\"privacy\" className={styles.privacyText}>\r\n                        согласен с <Link to=\"/privacyPolicy\">\r\n                            <span className={styles.spanColor}>политикой конфиденциальности *</span>\r\n                        </Link>\r\n                    </label>\r\n                </div>\r\n\r\n                <button \r\n                type=\"submit\" \r\n                className={styles.submitButton} \r\n                disabled={errorStateForTg === false} \r\n                style={{\r\n                    backgroundColor: errorStateForTg === false ? \"red\" : \"\",\r\n                    cursor: errorStateForTg === false ? \"not-allowed\" : \"\"\r\n                }}>\r\n                    <span className='textWhiteSmall'>ОТПРАВИТЬ ЗАЯВКУ</span>\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormForCall;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport anime from 'animejs/lib/anime.es.js';\nconst useAnim = (className, animationOptions) => {\n  _s();\n  const elementsRef = useRef([]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          anime({\n            targets: entry.target,\n            ...animationOptions\n          });\n          observer.unobserve(entry.target);\n        }\n      });\n    }, {\n      threshold: 0.1\n    });\n    elementsRef.current.forEach(element => observer.observe(element));\n    return () => {\n      elementsRef.current.forEach(element => observer.unobserve(element));\n    };\n  }, [animationOptions]);\n  const refCallback = element => {\n    if (element) {\n      elementsRef.current.push(element);\n    }\n  };\n  return refCallback;\n};\n_s(useAnim, \"Z3czLv2T88IszI7epnRpheYnz3U=\");\nexport default useAnim;","map":{"version":3,"names":["useEffect","useRef","anime","useAnim","className","animationOptions","_s","elementsRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","targets","target","unobserve","threshold","current","element","observe","refCallback","push"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/src/Animations/useAnim.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport anime from 'animejs/lib/anime.es.js';\r\n\r\nconst useAnim = (className, animationOptions) => {\r\n    const elementsRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                entries.forEach(entry => {\r\n                    if (entry.isIntersecting) {\r\n                        anime({\r\n                            targets: entry.target,\r\n                            ...animationOptions\r\n                        });\r\n                        observer.unobserve(entry.target);\r\n                    }\r\n                });\r\n            },\r\n            { threshold: 0.1 }\r\n        );\r\n\r\n        elementsRef.current.forEach(element => observer.observe(element));\r\n\r\n        return () => {\r\n            elementsRef.current.forEach(element => observer.unobserve(element));\r\n        };\r\n    }, [animationOptions]);\r\n\r\n    const refCallback = (element) => {\r\n        if (element) {\r\n            elementsRef.current.push(element);\r\n        }\r\n    };\r\n\r\n    return refCallback;\r\n};\r\n\r\nexport default useAnim;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,KAAK,MAAM,yBAAyB;AAE3C,MAAMC,OAAO,GAAGA,CAACC,SAAS,EAAEC,gBAAgB,KAAK;EAAAC,EAAA;EAC7C,MAAMC,WAAW,GAAGN,MAAM,CAAC,EAAE,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMQ,QAAQ,GAAG,IAAIC,oBAAoB,CACpCC,OAAO,IAAK;MACTA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;QACrB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACtBX,KAAK,CAAC;YACFY,OAAO,EAAEF,KAAK,CAACG,MAAM;YACrB,GAAGV;UACP,CAAC,CAAC;UACFG,QAAQ,CAACQ,SAAS,CAACJ,KAAK,CAACG,MAAM,CAAC;QACpC;MACJ,CAAC,CAAC;IACN,CAAC,EACD;MAAEE,SAAS,EAAE;IAAI,CACrB,CAAC;IAEDV,WAAW,CAACW,OAAO,CAACP,OAAO,CAACQ,OAAO,IAAIX,QAAQ,CAACY,OAAO,CAACD,OAAO,CAAC,CAAC;IAEjE,OAAO,MAAM;MACTZ,WAAW,CAACW,OAAO,CAACP,OAAO,CAACQ,OAAO,IAAIX,QAAQ,CAACQ,SAAS,CAACG,OAAO,CAAC,CAAC;IACvE,CAAC;EACL,CAAC,EAAE,CAACd,gBAAgB,CAAC,CAAC;EAEtB,MAAMgB,WAAW,GAAIF,OAAO,IAAK;IAC7B,IAAIA,OAAO,EAAE;MACTZ,WAAW,CAACW,OAAO,CAACI,IAAI,CAACH,OAAO,CAAC;IACrC;EACJ,CAAC;EAED,OAAOE,WAAW;AACtB,CAAC;AAACf,EAAA,CAjCIH,OAAO;AAmCb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
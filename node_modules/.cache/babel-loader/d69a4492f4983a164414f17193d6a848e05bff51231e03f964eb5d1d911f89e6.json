{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npatr\\\\Documents\\\\GitHub\\\\AutoBox18\\\\autobox\\\\src\\\\Hooks\\\\useLeafletMap.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport L from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useLeafletMap = (center, zoom, height, width, markers = [], imageUrl, imageBounds) => {\n  _s();\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (map) {\n      // Убедитесь, что иконка создается заново при каждом изменении imgIcon\n      const customIcon = new L.Icon({\n        iconUrl: imgIcon,\n        // Укажите путь к вашему изображению\n        iconSize: [25, 41],\n        // Размер иконки\n        iconAnchor: [12, 41],\n        // Точка привязки иконки\n        popupAnchor: [1, -34],\n        // Точка привязки всплывающего окна\n        shadowSize: [41, 41],\n        // Размер тени\n        shadowAnchor: [12, 41] // Точка привязки тени\n      });\n      map.eachLayer(layer => {\n        if (layer instanceof L.Marker) {\n          map.removeLayer(layer);\n        }\n      });\n      markers.forEach(({\n        position,\n        popup\n      }) => {\n        L.marker(position, {\n          icon: customIcon\n        }).addTo(map).bindPopup(popup);\n      });\n\n      // if (imageUrl && imageBounds) {\n      //   L.imageOverlay(imageUrl, imageBounds).addTo(map);\n      //   map.fitBounds(imageBounds);\n      // }\n    }\n  }, [map, markers, imageUrl, imageBounds, imgIcon]); // Добавьте imgIcon в зависимости\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: zoom,\n    style: {\n      height: height,\n      width: width\n    },\n    whenCreated: setMap,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.position,\n      icon: new L.Icon({\n        iconUrl: imgIcon\n      }),\n      children: [\" \", /*#__PURE__*/_jsxDEV(Popup, {\n        children: marker.popup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(useLeafletMap, \"4bJBv0PO2rrDzFRchWWuXyIru0A=\");\nexport default useLeafletMap;","map":{"version":3,"names":["useEffect","useState","L","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","useLeafletMap","center","zoom","height","width","markers","imageUrl","imageBounds","_s","map","setMap","customIcon","Icon","iconUrl","imgIcon","iconSize","iconAnchor","popupAnchor","shadowSize","shadowAnchor","eachLayer","layer","removeLayer","forEach","position","popup","marker","icon","addTo","bindPopup","style","whenCreated","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","index"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/autobox/src/Hooks/useLeafletMap.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport L from 'leaflet';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst useLeafletMap = (center, zoom, height, width, markers = [], imageUrl, imageBounds) => {\r\n  const [map, setMap] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      // Убедитесь, что иконка создается заново при каждом изменении imgIcon\r\n      const customIcon = new L.Icon({\r\n        iconUrl: imgIcon, // Укажите путь к вашему изображению\r\n        iconSize: [25, 41], // Размер иконки\r\n        iconAnchor: [12, 41], // Точка привязки иконки\r\n        popupAnchor: [1, -34], // Точка привязки всплывающего окна\r\n        shadowSize: [41, 41], // Размер тени\r\n        shadowAnchor: [12, 41] // Точка привязки тени\r\n      });\r\n\r\n      map.eachLayer(layer => {\r\n        if (layer instanceof L.Marker) {\r\n          map.removeLayer(layer);\r\n        }\r\n      });\r\n\r\n      markers.forEach(({ position, popup }) => {\r\n        L.marker(position, { icon: customIcon }).addTo(map).bindPopup(popup);\r\n      });\r\n\r\n      // if (imageUrl && imageBounds) {\r\n      //   L.imageOverlay(imageUrl, imageBounds).addTo(map);\r\n      //   map.fitBounds(imageBounds);\r\n      // }\r\n    }\r\n  }, [map, markers, imageUrl, imageBounds, imgIcon]); // Добавьте imgIcon в зависимости\r\n\r\n  return (\r\n    <MapContainer center={center} zoom={zoom} style={{ height: height, width: width }} whenCreated={setMap}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution={false}\r\n      />\r\n      {markers.map((marker, index) => (\r\n        <Marker key={index} position={marker.position} icon={new L.Icon({ iconUrl: imgIcon })}> {/* Исправлено */}\r\n          <Popup>{marker.popup}</Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default useLeafletMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
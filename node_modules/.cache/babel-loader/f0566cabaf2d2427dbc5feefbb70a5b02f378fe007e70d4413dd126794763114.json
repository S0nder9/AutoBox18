{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npatr\\\\Documents\\\\GitHub\\\\AutoBox18\\\\autobox\\\\src\\\\Components\\\\UI\\\\Buttons\\\\Enrol.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./Enrol.module.css\";\nimport { entrySliceClose, entrySliceOpen } from \"../../../Store/Slices/entrySlice\";\nimport Modal from \"../Modal/Modal\";\nimport BcModal from \"../Modal/BcModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Enrol = props => {\n  _s();\n  const openModalWindow = useSelector(state => state.entrySlice.entrySliceOpenState);\n  const dispatch = useDispatch();\n\n  // if (!event.target.closet(<Modal/>)) {\n  //     console.log(\"sdsds\");\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: () => dispatch(entrySliceOpen()),\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), openModalWindow && /*#__PURE__*/_jsxDEV(BcModal, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => dispatch(entrySliceClose())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n};\n_s(Enrol, \"2A3ffPCmooAbuZqKkcEL5P3+p2E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Enrol;\nexport default Enrol;\nvar _c;\n$RefreshReg$(_c, \"Enrol\");","map":{"version":3,"names":["React","useDispatch","useSelector","styles","entrySliceClose","entrySliceOpen","Modal","BcModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Enrol","props","_s","openModalWindow","state","entrySlice","entrySliceOpenState","dispatch","children","className","button","onClick","text","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["C:/Users/npatr/Documents/GitHub/AutoBox18/autobox/src/Components/UI/Buttons/Enrol.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./Enrol.module.css\";\nimport { entrySliceClose, entrySliceOpen } from \"../../../Store/Slices/entrySlice\";\nimport Modal from \"../Modal/Modal\";\nimport BcModal from \"../Modal/BcModal\";\n\nconst Enrol = (props) => {\n    const openModalWindow = useSelector(state => state.entrySlice.entrySliceOpenState);\n    const dispatch = useDispatch();\n\n    // if (!event.target.closet(<Modal/>)) {\n    //     console.log(\"sdsds\");\n    // }\n\n    return (\n        <>\n            <button className={styles.button} onClick={() => dispatch(entrySliceOpen())}>{props.text}</button>\n            {openModalWindow && <BcModal>\n                <Modal onClose={() => dispatch(entrySliceClose())} />\n                </BcModal>}\n        </>\n    );\n}\n\nexport default Enrol;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,eAAe,EAAEC,cAAc,QAAQ,kCAAkC;AAClF,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAMC,eAAe,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACC,mBAAmB,CAAC;EAClF,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;;EAEA,oBACIQ,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAQY,SAAS,EAAElB,MAAM,CAACmB,MAAO;MAACC,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAACd,cAAc,CAAC,CAAC,CAAE;MAAAe,QAAA,EAAEP,KAAK,CAACW;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EACjGb,eAAe,iBAAIN,OAAA,CAACF,OAAO;MAAAa,QAAA,eACxBX,OAAA,CAACH,KAAK;QAACuB,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACf,eAAe,CAAC,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA,eAChB,CAAC;AAEX,CAAC;AAAAd,EAAA,CAhBKF,KAAK;EAAA,QACiBV,WAAW,EAClBD,WAAW;AAAA;AAAA6B,EAAA,GAF1BlB,KAAK;AAkBX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}